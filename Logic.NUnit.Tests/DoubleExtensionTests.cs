using NUnit.Framework;
using static Logic.DoubleExtension;

namespace Logic.NUnit.Tests
{
    [TestFixture]
    class DoubleExtensionTests
    {
        [TestCase(1.0,         "0011111111110000000000000000000000000000000000000000000000000000")]
        [TestCase(-1.0,        "1011111111110000000000000000000000000000000000000000000000000000")]
        [TestCase(-2.0,        "1100000000000000000000000000000000000000000000000000000000000000")]
        [TestCase(2.0,         "0100000000000000000000000000000000000000000000000000000000000000")]
        [TestCase(3.0,         "0100000000001000000000000000000000000000000000000000000000000000")]
        [TestCase(4.0,         "0100000000010000000000000000000000000000000000000000000000000000")]
        [TestCase(6.001,       "0100000000011000000000010000011000100100110111010010111100011011")]
        [TestCase(5,           "0100000000010100000000000000000000000000000000000000000000000000")]
        [TestCase(-5.0,        "1100000000010100000000000000000000000000000000000000000000000000")]
        [TestCase(17.84333123, "0100000000110001110101111110010010001110001101001000101110100011")]
        //                     "0100000000110001110101111110010010001110001101001000101110100011" http://www.binaryconvert.com/result_double.html?decimal=049055046056052051051051049050051
        public void ShowInIEEE754Format_DoubleNumber_ExpectedString(double number, string expected)
        {
            var result = number.ShowInIEEE754Format();
            Assert.AreEqual(expected, result);
        }
    }
}
